//两种解法
//1、直接暴力求解，两个for循环遍历
//  O(n^2)的时间复杂度
//2、利用HashMap
//每次遍历的值都与target作减法，得到一个差值结果diff，在map集合中搜索，如果diff在map集合中，则取出map对应的索引和nums集合中的索引
class Solution {
    public int[] twoSum(int[] nums, int target) {
        int diff;
        Map<Integer, Integer> map = new HashMap<Integer,Integer>();
        for (int i=0;i<nums.length;i++){
            diff=target-nums[i];
            if (map.containsKey(diff)){
                return new int[]{map.get(diff),i};
            }
            map.put(nums[i],i);
        }

        return null;
    }
}
