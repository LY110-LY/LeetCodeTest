package easyday.day07;
//125. 验证回文串
public class ValidPalindrome_125 {
//    //自己的想法没看题是错误的，没有考虑数字
//    public boolean isPalindrome(String s) {
//        int len=s.length();
//        StringBuffer stringBuffer = new StringBuffer();
//        for (int i=0;i<len;i++){
//            char c = s.charAt(i);
//            if ((c>=65&&c<=90)||(c>=97&&c<=122)){
//                stringBuffer.append(c);
//            }
//        }
//        System.out.println(stringBuffer.toString());
//        StringBuffer reverse = new StringBuffer(stringBuffer).reverse();
//
//        return reverse.toString().equalsIgnoreCase(stringBuffer.toString());
//
//    }
    //利用StringBuffer(stringBuffer).reverse()方法
//    public boolean isPalindrome(String s) {
//        int len=s.length();
//        StringBuffer stringBuffer = new StringBuffer();
//        for (int i=0;i<len;i++){
//            char c = s.charAt(i);
//            //Character.isLetterOrDigit(c),判断字符是否是字母或数字
//            if (Character.isLetterOrDigit(c)){
//                stringBuffer.append(c);
//            }
//        }
//        System.out.println(stringBuffer.toString());
//        StringBuffer reverse = new StringBuffer(stringBuffer).reverse();
//
//        return reverse.toString().equalsIgnoreCase(stringBuffer.toString());
//
//    }

    //双指针做法
    public boolean isPalindrome(String s) {
        int len=s.length();
        StringBuffer stringBuffer = new StringBuffer();
        for (int i=0;i<len;i++){
            char c = s.charAt(i);
            //Character.isLetterOrDigit(c),判断字符是否是字母或数字
            if (Character.isLetterOrDigit(c)){
                stringBuffer.append(Character.toLowerCase(c));
            }
        }
        int left=0;
        int right=stringBuffer.length()-1;
        while (left<right){
            if (stringBuffer.charAt(left)==stringBuffer.charAt(right)){
                left++;
                right--;
                continue;
            }else {
                return false;
            }
        }
        return true;

    }
}
