package easyday.day08;
//167. 两数之和 II - 输入有序数组
public class TwoSumII_InputArrayIsSorted_167 {
    public int[] twoSum(int[] numbers, int target) {
        //二分法查找
        //从当前的i的右侧(i+1)开始找，每次取中间值，找不到就继续for循环
        //在找的过程中调整low和high的位置
        int len = numbers.length;
        int low=0;
        int high = len-1;
        for (int i=0;i<len;i++){
            low=i+1;
            while (low<=high){
                int mid=low+(high-low)/2;
                if (numbers[i]+numbers[mid]==target){
                    return new int[]{i+1, mid+1};
                }else if (numbers[i]+numbers[mid]>target){
                    high=low+(high-low)/2-1;
                }else {
                    low=low+(high-low)/2+1;
                }
            }
        }
        return new int[]{0,0};
    }
}
